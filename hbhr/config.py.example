# -*- coding: utf-8 -*-
"""Config class sample

This is a sample file for the flask app configuration. Each environment
should have its own version of this renamed to config.py in the current
directory. The reason for doing it this way instead of using environment
variables to read the specific config is that app.config.from_envvar 
was not overwriting the settings read from the default configuration.
"""

import os
from datetime import timedelta


class Config(dict):
    # TOP_SERVICES - number of services to highlight on home page
    TOP_SERVICES = 6

    # SECRET_KEY - random string used for security of the flask application
    SECRET_KEY = os.environ.get('SECRET_KEY')

    # Bcrypt is set as default SECURITY_PASSWORD_HASH, which requires a salt
    SECURITY_PASSWORD_SALT = os.environ.get("SECURITY_PASSWORD_SALT")

    # have session and remember cookie be samesite (flask/flask_login)
    REMEMBER_COOKIE_SAMESITE = "strict"
    SESSION_COOKIE_SAMESITE = "strict"

    # Flask-Security settings
    SECURITY_REGISTERABLE = True
    SECURITY_CONFIRMABLE = True
    SECURITY_TRACKABLE = True
    SECURITY_RECOVERABLE = True
    SECURITY_CHANGEABLE = True
    SECURITY_USERNAME_ENABLE = True
    SECURITY_SEND_REGISTER_EMAIL = True

    # SQLALCHEMY_DATABASE_URI - this should be stored in the environment variable for security reasons
    SQLALCHEMY_DATABASE_URI = os.environ.get('HBHR_DB')

    # As of Flask-SQLAlchemy 2.4.0 it is easy to pass in options directly to the
    # underlying engine. This option makes sure that DB connections from the
    # pool are still valid. Important for entire application since
    # many DBaaS options automatically close idle connections.
    SQLALCHEMY_ENGINE_OPTIONS = {
    "pool_pre_ping": True,
    }

    # SQLALCHEMY_TRACK_MODIFICATIONS - disabled to save resources
    SQLALCHEMY_TRACK_MODIFICATIONS = False

    # Directory where to store the log file - best if full path
    LOG_DIR = 'logs\\'
    
    # MAIL_SERVER - 'mail.carbld.com' on local machines and 'localhost' on the server
    MAIL_SERVER = 'localhost'

    # MAIL settings - use SSL instead of TLS, port 465, put user and pass in env var
    MAIL_PORT = 465
    MAIL_USE_TLS = False
    MAIL_USE_SSL = True
    MAIL_DEBUG = False
    MAIL_USERNAME = os.environ.get('EMAIL_USER')
    MAIL_PASSWORD = os.environ.get('EMAIL_PASS')
    MAIL_DEFAULT_SENDER = ('Homebirth Support Hampton Roads', 'support@homebirthhamptonroads.org')

    # Lifetime of a session - used to scramble search results for each visitor
    PERMANENT_SESSION_LIFETIME =  timedelta(days=3)

    # Search results and listings per page
    RESULTS_PER_PAGE = 10
